using PortAudio.AutoGenerated;
using PortAudio.Wrapper;
using PortAudioCSharp;
using System.Reflection;
using System.Runtime.InteropServices;

NativeLibrary.SetDllImportResolver(typeof(NativeConsts).Assembly, DllImportResolver);
Console.WriteLine(PortAudioWrapper.GetVersionText());

using var outDevice = new PortAudioOutDevice();

static IntPtr DllImportResolver(string libraryName, Assembly assembly, DllImportSearchPath? searchPath)
{
    if (libraryName == "portaudio")
    {
        string path = "";
        string modifier = "lib";
        string extention = "";
        if (RuntimeInformation.IsOSPlatform(OSPlatform.Linux))
        {
            path += "/usr/lib";
            extention = ".so.2";
        }

        if (RuntimeInformation.ProcessArchitecture == Architecture.X86 || RuntimeInformation.ProcessArchitecture == Architecture.X64)
        {
            path += "/x86_64-linux-gnu";
        }

        return NativeLibrary.Load(Path.Combine(path, $"{modifier}portaudio{extention}"), assembly, searchPath);
    }

    // Otherwise, fallback to default import resolver.
    return IntPtr.Zero;
}