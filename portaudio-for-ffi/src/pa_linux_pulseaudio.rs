/* automatically generated by rust-bindgen 0.69.4 */

#[doc = " Error codes returned by PortAudio functions.\nNote that with the exception of paNoError, all PaErrorCodes are negative."]
pub type PaError = ::std::os::raw::c_int;
#[doc = "A single PaStream can provide multiple channels of real-time\nstreaming audio input and output to a client application. A stream\nprovides access to audio hardware represented by one or more\nPaDevices. Depending on the underlying Host API, it may be possible\nto open multiple streams using the same device, however this behavior\nis implementation defined. Portable applications should assume that\na PaDevice may be simultaneously used by at most one PaStream.\n\nPointers to PaStream objects are passed between PortAudio functions that\noperate on streams.\n\n@see Pa_OpenStream, Pa_OpenDefaultStream, Pa_OpenDefaultStream, Pa_CloseStream,\nPa_StartStream, Pa_StopStream, Pa_AbortStream, Pa_IsStreamActive,\nPa_GetStreamTime, Pa_GetStreamCpuLoad"]
pub type PaStream = ::std::os::raw::c_void;
extern "C" {
    #[doc = " Renames the PulseAudio description for the source that is opened\n by PortAudio.\n\n @param s The PortAudio stream to operate on.\n @param streamName The new name/description of the source.\n\n @return paNoError on success or the error encountered otherwise."]
    pub fn PaPulseAudio_RenameSource(
        s: *mut PaStream,
        streamName: *const ::std::os::raw::c_char,
    ) -> PaError;
}
extern "C" {
    #[doc = " Renames the PulseAudio description for the sink that is opened\n by PortAudio.\n\n @param s The PortAudio stream to operate on.\n @param streamName The new name/description of the sink.\n\n @return paNoError on success or the error encountered otherwise."]
    pub fn PaPulseAudio_RenameSink(
        s: *mut PaStream,
        streamName: *const ::std::os::raw::c_char,
    ) -> PaError;
}
