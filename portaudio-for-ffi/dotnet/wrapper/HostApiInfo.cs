using System;
using PortAudioCSharp.AutoGenerated;
using PortAudioCSharp.Utils;

namespace PortAudioCSharp.Wrapper;

public ref struct HostApiInfo
{
    public int StructVersion { get; }
    public PaHostApiTypeId Type { get; }
    public ReadOnlySpan<byte> Name { get; }
    public int DeviceCount { get; }
    public int DefaultInputDevice { get; }
    public int DefaultOutputDevice { get; }

    internal unsafe HostApiInfo(PaHostApiInfo* paHostApiInfo)
    {
        if ((nint)(&paHostApiInfo) != nint.Zero)
        {
            StructVersion = paHostApiInfo->structVersion;
            Type = paHostApiInfo->type_;
            Name = Helper.ConvertROS(paHostApiInfo->name);
            DeviceCount = paHostApiInfo->deviceCount;
            DefaultInputDevice = paHostApiInfo->defaultInputDevice;
            DefaultOutputDevice = paHostApiInfo->defaultOutputDevice;
        }
        else
        {
            throw new ArgumentNullException(nameof(paHostApiInfo));
        }
    }
}
